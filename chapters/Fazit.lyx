#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 503
\begin_document
\begin_header
\origin unavailable
\textclass scrartcl
\begin_preamble
\usepackage{minted}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Zusammenfassung und Fazit
\end_layout

\begin_layout Subsection
Zusammenfassung
\end_layout

\begin_layout Standard
Das Ergebnis dieser Arbeit ist ein flexibel einsetzbares Framework für Gossiping
-Algorithmen, das im FIT IoT-Lab verwendet werden kann.
\end_layout

\begin_layout Standard
Wie bereits beschrieben, ist Gossiping ein enorm simples Protokoll, das
 eine sehr gute Verteilung der Daten mit wenig Aufwand ermöglicht.
 Eine der großen Stärken des Algorithmus ist dabei, dass ein Knoten nur
 wenig über die Topologie des Netzwerks wissen muss, da er lediglich mit
 seinen Nachbarn kommuniziert.
 Dadurch werden Routing-Verfahren für diesen Algorithmus obsolet.
 Des Weiteren wird sichergestellt, dass die Last eines Knotens beschränkt
 ist und einzelne Knoten nicht die gesamte Last des Netzwerks tragen müssen,
 da jeder Knoten in einem bestimmten Intervall höchstens einen anderen Nachbarn
 kontaktiert und somit höchstens 
\begin_inset Formula $n$
\end_inset

 Nachrichten, wenn 
\begin_inset Formula $n$
\end_inset

 die Anzahl der Knoten ist, Nachrichten erhalten kann.
\end_layout

\begin_layout Standard
Somit bieten sich diese Protokolle auch gut dazu an, sie neben anderen Verfahren
 zu verwenden.
\end_layout

\begin_layout Standard
Die Implementierung führte in die Entwicklung von Software für stark beschränkte
 Hardware ein.
 So wurden Betriebssysteme für eingebettete Systeme sowie ein Standard zur
 Energie und Ressourcen sparenden, drahtlosen Kommunikation zwischen dieser
 Hardware kennen gelernt und angewendet.
\end_layout

\begin_layout Standard
Ein besonderer Reiz stellte dabei die einfache Distribution dieser Software
 auf ein großes Testbed, dem IoT-Lab, dar, das eine Evaluation der Software
 ermöglichte.
\end_layout

\begin_layout Standard
Jedoch fiel im Rahmen der Implementierung auf, dass das Finden von Fehlern
 durch den hohen Grad an Zufallsentscheidungen erheblich erschwert wurde,
 da viele Fehler nicht sofort reproduzierbar sind.
\end_layout

\end_body
\end_document
